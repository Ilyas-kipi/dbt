version: 2

models:
  - name: stg_customers
    description: Staged customer data from our jaffle shop app.
    columns: 
      - name: customer_id
        description: The primary key for customers.
        tests:
          - unique
          - not_null

  - name: stg_orders
    description: Staged order data from our jaffle shop app.
    columns:
      - name: order_id
        description: Primary key for orders.
        tests:
          - unique
          - not_null
      - name: status
        description: '{{ doc("order_status") }}'
        tests:
          - accepted_values:
              values:
                - completed
                - shipped
                - returned
                - return_pending
                - placed
      - name: customer_id
        tests:
          - relationships:
              to: ref('stg_customers')
              field: customer_id
          - unique:
             # Similarly we can also add where config/limit/store_failures as below
             # where : "order_date >= '2018-10-31'"
             # limit : 10, This is used to save compute by returning only 10 failed records
             # store_failures : True, This will store failed rows to the database
             # schema : test_failures, This will stored all failed records in this schema
             # We can also use dbt test --select orders --store-failures to save the failed records
             config:
               severity: warn
               warn_if: ">30"
               error_if: ">50"